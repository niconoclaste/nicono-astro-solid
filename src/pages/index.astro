---
// Layout Import
import Layout from '@layouts/Layout.astro';

// Components Import
import { Header } from '@components/Header';
import Footer from '@components/Footer.astro';

import { Translate } from '@components/Translate';

import Hero from '@components/Hero.astro';
import { TopAbout } from '@components/top/TopAbout';
import { TopWorks } from '@components/top/TopWorks';
import { TopWorks2 } from '@components/top/TopWorks2';
import { Snippet } from '@components/top/Snippet';

// import Articles from '@components/svelte/top/Articles.svelte';
import type { WORK } from '@utils/types';

import translation from '@utils/translation.json';
import { settings } from '@utils/settings.js';

const worksData = await fetch('http://niconoclaste.jp/lib/works/');
const works = await worksData.json();
const maxWorks = settings.maxWorks;
let topWorks = works.filter((work: WORK) => !work.hidden);
topWorks = topWorks.filter((work: WORK) => work.top).sort((a: WORK, b: WORK) => new Date(a.date).getTime() > new Date(b.date).getTime() ? -1 : new Date(a.date).getTime() < new Date(b.date).getTime() ? 1 : 0).slice(0, maxWorks)

const Articles = await Astro.glob('../posts/*.mdx');


const current = 'home';
const layout = 'home';
const titleEn = 'top';
const titleJa = 'トップ';
const description = '';
const keywords = '';

---
<Layout titleEn={titleEn} titleJa={titleJa} description={description} keywords={keywords} >

	<section class="l-hero">
		<Hero />
	</section>
	
	<main class="g-main">
	
		<Header client:only="solid" current={current} layout={layout} translation={translation} />

		<article class="l-article" id="about">
			<header class="m-header">
				<h2 class="title"><Translate client:only="solid" en={translation.about.title.en} ja={translation.about.title.ja} /></h2>
			</header>
			
			<TopAbout client:only="solid" />

			<footer class="m-footer">
				<p><a href="/about"><strong><Translate client:only="solid" en={translation.about.more.en} ja={translation.about.more.ja} /></strong></a></p>
			</footer>
		</article>

		<article class="l-article" id="works">
			<header class="m-header">
				<h2 class="title"><Translate client:only="solid" en={translation.works.title.en} ja={translation.works.title.ja} /></h2>
			</header>

			<section class="l-section">
				<div class="m-bloc" id="top-works">
					<!-- <TopWorks client:only="solid" works={topWorks}/> -->
					<TopWorks2 client:load />
				</div>
			</section>

			<footer class="m-footer">
				<p><a href="/works"><strong><Translate client:only="solid" en={translation.works.more.en} ja={translation.works.more.ja} /></strong></a></p>
			</footer>
		</article>

		<article class="l-article" id="codes">
			<header class="m-header">
				<h2 class="title"><Translate client:only="solid" en={translation.codes.title.en} ja={translation.codes.title.ja} /></h2>
			</header>
			<!-- <Codes client:only /> -->

			<section class="l-section">

				<div class="m-bloc">
					<Snippet client:only="solid" id="NWgvaOa" title="CSS only responsive slider" title_ja="CSSのみ レスポンシブ カルーセル" />
				</div>
				<div class="m-bloc">
					<Snippet client:only="solid" id="ExbKxPx" title="Responsive svg progress circle" title_ja="レスポンシブSVG進行サークル" />
				</div>
				<div class="m-bloc">
					<Snippet client:only="solid" id="poadjOL" title="STAR WARS opening" title_ja="スターウォーズ オープニング" />
				</div>
			</section>

			<footer class="m-footer">
				<p><a href="https://codepen.io/niconoclaste" target="_blank" rel="noopener"><strong><Translate client:only="solid" en={translation.codes.more.en} ja={translation.codes.more.ja} /></strong></a></p>
			</footer>

		</article>

		<article class="l-article" id="articles">
			<header class="m-header">
				<h2 class="title"><Translate client:only="solid" en={translation.articles.title.en} ja={translation.articles.title.ja} /></h2>
			</header>
			<section class="l-section">

				
      {Articles.map(({ default: Content }, i) => { return (
				<div class="m-bloc">
					<Content />
				</div>
      )})}



			{Articles.map(article => (
				<div class="m-bloc"><Translate client:only="solid" en={article.frontmatter.titleEn} ja={article.frontmatter.titleJa} /></div>
			))}

			</section>

			<!-- <Articles client:only articles={articles} /> -->
		</article>

	</main>

	<Footer />
</Layout>